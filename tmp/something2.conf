# CHATGPT
# Configuration d'un serveur virtuel sur un port et un hôte spécifiques
server {
    # Ecoute sur le port 8080
    listen 8080;
    # Cette ligne indique au serveur d'écouter les requêtes HTTP sur le port 8080.
    # Le port 80 est le port par défaut pour HTTP, mais ici, on utilise le port 8080, qui est souvent utilisé pour le développement ou pour des services spécifiques.

    # Noms de domaine pour ce serveur
    server_name example.com www.example.com;
    # Cette ligne indique les noms de domaine que ce serveur gérera.
    # Quand un utilisateur tape "example.com" ou "www.example.com" dans son navigateur, ce serveur traitera la requête.
    # Sans cette ligne, le serveur répondra à toutes les requêtes sur le port spécifié.

    # Répertoire racine des fichiers pour ce serveur
    # root /var/www/example;
    # Cette ligne spécifie où se trouvent les fichiers de votre site web sur le serveur.
    # Le chemin "/var/www/example" est le répertoire racine, c'est-à-dire le point de départ où le serveur cherchera les fichiers à servir.

    # Fichiers index par défaut
    # index index.html index.htm;
    # Cette ligne définit les fichiers par défaut que le serveur renverra lorsqu'un utilisateur accède à un répertoire sans spécifier de fichier.
    # Par exemple, si quelqu'un accède à "http://example.com/", le serveur cherchera "index.html" ou "index.htm" dans le répertoire racine pour répondre à la requête.

    # Limite de taille du corps des requêtes
    client_max_body_size 1M;
    # Cette ligne limite la taille maximale des données que le client peut envoyer au serveur dans une requête.
    # Ici, la limite est fixée à 1 mégaoctet (1M). Cela aide à prévenir des abus comme des tentatives de surcharge du serveur avec des fichiers très volumineux.

    # Pages d'erreur par défaut
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    # Ces lignes spécifient les pages à afficher pour différents codes d'erreur HTTP.
    # Par exemple, si une page demandée n'existe pas (erreur 404), le serveur renverra la page "/404.html".
    # Les erreurs 500, 502, 503, et 504 sont des erreurs de serveur, et toutes renverront la page "/50x.html".

    # Configuration des routes
    location / {
        # Méthodes HTTP acceptées
        limit_except GET POST {
            deny all;
        }
        # Cette section définit la racine du site ("/").
        # La directive "limit_except" spécifie que seules les méthodes HTTP GET et POST sont autorisées pour cette route.
        # Toutes les autres méthodes (PUT, DELETE, etc.) sont interdites.
    }

    location /redirect {
        # Redirection HTTP
        return 301 http://www.example.com$request_uri;
    }
    # Cette section redirige les requêtes vers "/redirect" vers une autre URL.
    # La directive "return 301" envoie une redirection permanente vers "http://www.example.com" avec le chemin de l'URL originale ajoutée à la fin.

    location /static/ {
        # Root spécifique pour une route
        alias /tmp/www/;
        # La directive "alias" spécifie un répertoire différent pour cette route.
        # Les requêtes à "/static/" seront servies à partir du répertoire "/tmp/www/".

        autoindex on;
        # La directive "autoindex" active le listing des répertoires.
        # Si un répertoire est demandé sans fichier index, le serveur renverra une liste des fichiers dans ce répertoire.
    }

    location /scripts/ {
        # Exécution de CGI pour les fichiers .php
        root /var/www/scripts;
        # La directive "root" spécifie le répertoire racine pour cette route.
        # Les fichiers scripts seront cherchés dans "/var/www/scripts".

        fastcgi_pass unix:/run/php/php7.4-fpm.sock;
        # La directive "fastcgi_pass" indique où envoyer les requêtes FastCGI.
        # Ici, les requêtes pour les fichiers PHP seront envoyées au socket PHP-FPM.

        fastcgi_index index.php;
        # La directive "fastcgi_index" spécifie le fichier index pour les requêtes FastCGI.

        include fastcgi_params;
        # La directive "include" inclut les paramètres FastCGI par défaut.

        # Méthodes HTTP acceptées pour cette route
        limit_except GET POST {
            deny all;
        }
        # Cette section limite également les méthodes HTTP à GET et POST pour cette route.
    }

    location /uploads/ {
        # Directory listing désactivé
        autoindex off;
        # La directive "autoindex off" désactive le listing des répertoires.
        # Si un répertoire est demandé sans fichier index, le serveur ne renverra pas la liste des fichiers dans ce répertoire.

        try_files $uri $uri/ =404;
        # Cette directive essaie de trouver le fichier correspondant à l'URL demandée.
        # Si le fichier ou le répertoire n'est pas trouvé, elle renvoie une erreur 404.
    }
}


